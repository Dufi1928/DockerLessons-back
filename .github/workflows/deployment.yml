name: Django CI/CD Pipeline

on: push

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Login to DockerHub
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            -   name: Build and push Docker image
                uses: docker/build-push-action@v5
                with:
                    context: .
                    push: true
                    tags: dufi1928/django-back:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Deploy to server and run migrations
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.HOST_MANAGER }}
                    username: ${{ secrets.MANA_USERNAME }}
                    key: ${{ secrets.MANA_SSH }}
                    script: |
                        SERVICE_NAME=django-service
                        IMAGE_NAME=dufi1928/django-back:latest
                        SERVICE_EXISTS=$(docker service ls | grep $SERVICE_NAME || true)
                        if [ -z "$SERVICE_EXISTS" ]; then
                            echo "Creating service $SERVICE_NAME"
                            docker service create --name $SERVICE_NAME --replicas 1 --publish published=8000,target=8000 $IMAGE_NAME
                        else
                            echo "Updating service $SERVICE_NAME"
                            docker service update --image $IMAGE_NAME $SERVICE_NAME
                        fi
                        # Note: L'exécution des migrations peut nécessiter une approche différente dans Swarm
