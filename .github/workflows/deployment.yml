name: Django CI/CD Pipeline

on: push

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Login to DockerHub
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            -   name: Build and push Docker image
                uses: docker/build-push-action@v5
                with:
                    context: .
                    push: true
                    tags: dufi1928/django-back:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Deploy to server and run migrations
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.HOST }}
                    username: ${{ secrets.USERNAME }}
                    key: ${{ secrets.SSH_KEY }}
                    script: |
                        # Deploy PostgreSQL Service
                        PG_SERVICE_NAME=pgdb
                        PG_IMAGE_NAME=postgres:latest # Utilisez l'image officielle de PostgreSQL
                        PG_SERVICE_EXISTS=$(docker service ls | grep $PG_SERVICE_NAME || true)
                        if [ -z "$PG_SERVICE_EXISTS" ]; then
                            echo "Creating PostgreSQL service $PG_SERVICE_NAME"
                            docker service create --name $PG_SERVICE_NAME --replicas 1 \
                            --env POSTGRES_DB=revisionzen \
                            --env POSTGRES_USER=ivan \
                            --env POSTGRES_PASSWORD=040998Ih@ \
                            --publish published=5432,target=5432 $PG_IMAGE_NAME
                        else
                            echo "PostgreSQL service $PG_SERVICE_NAME already exists"
                        fi
                        
                        DJANGO_SERVICE_NAME=django-service
                        DJANGO_IMAGE_NAME=dufi1928/django-back:latest
                        DJANGO_SERVICE_EXISTS=$(docker service ls | grep $DJANGO_SERVICE_NAME || true)
                        if [ -z "$DJANGO_SERVICE_EXISTS" ]; then
                            echo "Creating Django service $DJANGO_SERVICE_NAME"
                            docker service create --name $DJANGO_SERVICE_NAME --replicas 1 --publish published=8080,target=8080 $DJANGO_IMAGE_NAME
                        else
                            echo "Updating Django service $DJANGO_SERVICE_NAME"
                            docker service update --image $DJANGO_IMAGE_NAME --replicas 2 $DJANGO_SERVICE_NAME
                        fi
                            cho "Running Django migrations"
                            docker exec $(docker ps -qf "name=$DJANGO_SERVICE_NAME") python manage.py migrate
                        
